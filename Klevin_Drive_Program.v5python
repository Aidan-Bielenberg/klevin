{"mode":"Text","textContent":"myVariable = 0\n\ndef when_started1():\n    global myVariable\n    Lock=1\n    Gyroy.calibrate()\n    lift_lock_piston.set(True) \n    Arm_motor.set_velocity(0, PERCENT)\n    Arm_motor.set_max_torque(100, PERCENT)\n    Arm_motor.set_stopping(HOLD)\n    Right_Wheels.set_velocity(0, PERCENT)\n    Left_Wheels.set_velocity(0, PERCENT)\n    Randl.set_velocity(0,PERCENT)\n\ndef driving():\n    while True:\n        while abs(controller_1.axis3.position()) > 10 or abs(controller_1.axis4.position()) > 10:\n            Right_Wheels.set_velocity((controller_1.axis3.position() - controller_1.axis4.position()), PERCENT)\n            Left_Wheels.set_velocity((controller_1.axis3.position() + controller_1.axis4.position()), PERCENT)\n            wait(5, MSEC)\n        Right_Wheels.set_velocity(0, PERCENT)\n        Left_Wheels.set_velocity(0, PERCENT)\n        def autonomous():\n            pass\n\ndef arm_controls():\n    while True:\n        global myVariable\n        while Switch.value() != 0:\n            if controller_1.buttonR1.pressing():\n                Arm_motor.set_velocity(100,PERCENT)\n            elif controller_1.buttonR2.pressing():\n                Arm_motor.set_velocity(-100,PERCENT)\n            else:\n                Arm_motor.set_velocity(0,PERCENT)\n        while Switch.value() == 0:\n            if controller_1.buttonR1.pressing():\n                Arm_motor.set_velocity(100,PERCENT)\n            else:\n                Arm_motor.set_velocity(0,PERCENT)\n\ndef rngl_intake():\n    while True:\n        if controller_1.buttonL1.pressing():\n            Randl.set_velocity(100,PERCENT)\n        elif controller_1.buttonL2.pressing():\n            Randl.set_velocity(-100,PERCENT)\n        else:\n            Randl.set_velocity(0,PERCENT)\n        if controller_1.buttonL1.pressing():\n            Randl.set_velocity(100,PERCENT)\n        else:\n            Randl.set_velocity(0,PERCENT)\n\n\ndef forward(dist,veloc):\n    Right_Wheels.set_velocity(veloc, PERCENT)\n    Left_Wheels.set_velocity(veloc,PERCENT)\n    Right_Wheels.spin_for(FORWARD, dist, DEGREES, wait=False)\n    Left_Wheels.spin_for(FORWARD, dist, DEGREES, wait=True)\n\ndef backward(dist2,veloc2):\n    Right_Wheels.set_velocity(veloc2, PERCENT)\n    Left_Wheels.set_velocity(veloc2,PERCENT)\n    Right_Wheels.spin_for(FORWARD, dist2, DEGREES, wait=False)\n    Left_Wheels.spin_for(FORWARD, dist2, DEGREES, wait=True)\n\ndef turn_right(ang,veloc3):\n    while Gyroy.rotation(DEGREES) < int(ang):\n        Right_Wheels.set_velocity(veloc3,PERCENT)\n        Left_Wheels.set_velocity(veloc3,PERCENT)\n        Right_Wheels.spin(REVERSE)\n        Left_Wheels.spin(FORWARD)\n    Right_Wheels.stop()\n    Left_Wheels.stop()\n\ndef turn_left(ang2,veloc4):\n    while Gyroy.rotation(DEGREES) > int(ang2):\n        Right_Wheels.set_velocity(veloc4,PERCENT)\n        Left_Wheels.set_velocity(veloc4,PERCENT)\n        Right_Wheels.spin(FORWARD)\n        Left_Wheels.spin(REVERSE)\n    Right_Wheels.stop()\n    Left_Wheels.stop()\n\ndef aton_lift(rot,veloc5):\n    Arm_motor.set_velocity(veloc5,PERCENT,)\n    Arm_motor.spin_for(FORWARD,rot,TURNS,)\n\ndef aton_lock(up):\n    if up==1:\n        lift_lock_piston.set(True)\n    if up==0:\n        lift_lock_piston.set(False)\n\ndef lift_lock():\n    while True:\n        global myVariable\n        if controller_1.buttonB.pressing():\n            lift_lock_piston.set(True)\n            Lock=1\n        if controller_1.buttonA.pressing():\n            lift_lock_piston.set(False)\n            Lock=0\n\n\ndef driv_contr():\n    Arm_motor.set_velocity(0, PERCENT)\n    Right_Wheels.set_velocity(0, PERCENT)\n    Left_Wheels.set_velocity(0, PERCENT)\n    Arm_motor.spin(FORWARD)\n    Right_Wheels.spin(FORWARD)\n    Left_Wheels.spin(FORWARD)\n    lock=Thread( lift_lock )\n    arm=Thread( arm_controls )\n    driving()\n\ndef aton_sequence():\n    pass\n\n\ncomp = Competition(driv_contr, aton_sequence)\nwhen_started1()","textLanguage":"python","rconfig":[{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[1,2],"name":"Right_Wheels","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"true","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[3,4],"name":"Left_Wheels","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"false","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[5],"name":"Arm_motor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[1],"name":"lift_lock_piston","customName":true,"deviceType":"DigitalOut","deviceClass":"digital_out","setting":{"id":"partner"},"triportSourcePort":22},{"port":[2],"name":"Switch","customName":true,"deviceType":"DigitalIn","deviceClass":"digital_in","setting":{"id":"partner"},"triportSourcePort":22},{"port":[10],"name":"Gyroy","customName":true,"deviceType":"Inertial","deviceClass":"inertial","setting":{"id":"partner"},"triportSourcePort":22},{"port":[9],"name":"Randl","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"}}],"slot":0,"platform":"V5","sdkVersion":"20210708.10.00.00","appVersion":"2.2.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","target":"Physical"}